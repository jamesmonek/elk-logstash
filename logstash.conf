input {
   s3 {
     "access_key_id" => "[key]"
     "secret_access_key" => "[key]"
     "region" => "[region]"
     "bucket" => "[S3 bucket]"
     "prefix" => "[S3 prefix]"
     type => "[sitename1]"
   }
   s3 {
   "access_key_id" => "[key]"
   "secret_access_key" => "[key]"
   "region" => "[region]"
   "bucket" => "[S3 bucket]"
   "prefix" => "[S3 prefix]"
   type => "[sitename2]"
   }
   s3 {
   "access_key_id" => "[key]"
   "secret_access_key" => "[key]"
   "region" => "[region]"
   "bucket" => "[S3 bucket]"
   "prefix" => "[S3 prefix]"
   type => "[sitename3]"
   }
 }
 filter {
       grok {
          match => [
          "message" , "%{COMBINEDAPACHELOG}+%{GREEDYDATA:extra_fields}",
          "message" , "%{COMMONAPACHELOG}+%{GREEDYDATA:extra_fields}"
          ]
          overwrite => [ "message" ]
       }
       if [type] == "sitename1" {
         mutate {
          convert => ["response", "integer"]
          convert => ["bytes", "integer"]
          convert => ["responsetime", "float"]
          add_field => { "website" => "website name 1" }
         }
       }
       if [type] == "sitename2" {
         mutate {
          convert => ["response", "integer"]
          convert => ["bytes", "integer"]
          convert => ["responsetime", "float"]
          add_field => { "website" => "website name 2" }
         }
       }
       if [type] == "sitename3" {
         mutate {
          convert => ["response", "integer"]
          convert => ["bytes", "integer"]
          convert => ["responsetime", "float"]
          add_field => { "website" => "website name 3" }
         }
       }
       geoip {
          source => "clientip"
          target => "geoip"
          add_tag => [ "apache-geoip" ]
       }
       date {
          match => [ "timestamp" , "dd/MMM/YYYY:HH:mm:ss Z" ]
          remove_field => [ "timestamp" ]
       }
       useragent {
          source => "agent"
       }
 }
 output {
   elasticsearch {
     hosts => ["localhost:9200"]
     index => "logstash-%{+YYYY.MM.dd}"
   }
 }
